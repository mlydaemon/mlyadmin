<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace必须是DAO接口的全类名  -->

<mapper namespace="com.mlycan.main.mapper.QuestionMapper">
	<resultMap type="com.mlycan.main.entity.Question" id="questionResultMap"> 
        <id property="questionId" column="question_id"/> 
        <result property="account" column="account"/>
        <result property="application" column="application"/>
        <result property="content" column="content"/> 
        <result property="command" column="command"/> 
        <result property="classify" column="classify"/> 
        <result property="createTime" column="create_time"/> 
        <result property="pattern" column="pattern"/> 
    </resultMap>
	<select id="findQuestionForTrain"   resultMap="questionResultMap">
		   select  que.question_id,
				   que.account,
				   que.application,
				   que.content,
				   que.command,
				   que.classify,
				   date_format(que.create_time, '%Y-%m-%d') as create_time,
				   que.pattern
		     from mly_question que
	         where que.account = #{robotAccount}
	         AND   que.application = #{application}
	         AND   que.classify = #{semantic}
	         order by que.content,que.create_time
	</select>
	<select id="findAll"   resultMap="questionResultMap">
		   select  que.question_id,
				   que.account,
				   que.application,
				   que.content,
				   que.command,
				   que.classify,
				   date_format(que.create_time, '%Y-%m-%d') as create_time,
				   que.pattern
		     from mly_question que
		     where 1=1
		     <if test="startTime!=null and startTime!=''">
		      AND  que.create_time >= #{startTime}
		     </if>
		     <if test="endTime!=null  and endTime!=''">
		      AND   #{endTime} >= que.create_time
		     </if>
		     <if test="keywords!=null and keywords!=''">
		      AND   (que.account =#{keywords} or que.application=#{keywords} or que.content=#{keywords} or que.command=#{keywords} )
		     </if>
		     <if test="command!=null and command!=''">
		      AND   que.command = #{command}
		     </if>
		     <if test="semantic!=null and semantic!=''">
		      AND   que.classify = #{semantic} 
		     </if>
		     order by que.create_time desc,que.content
	         <if test=" count!=null">  
               limit #{currentCount},#{count}
             </if>
             
	</select>
	<select id="findAllCount"   resultType="java.lang.Integer">
		 <![CDATA[ 
		   select count(que.question_id) as value
		     from mly_question que 
		 	]]> 
		   where 1=1
		     <if test="startTime!=null and startTime!=''">
		      AND  que.create_time >= #{startTime}
		     </if>
		     <if test="endTime!=null  and endTime!=''">
		      AND   #{endTime} >= que.create_time
		     </if>
		     <if test="keywords!=null and keywords!=''">
		      AND   (que.account =#{keywords} or que.application=#{keywords} or que.content=#{keywords} or que.command=#{keywords} )
		     </if>
		     <if test="command!=null and command!=''">
		      AND   que.command = #{command}
		     </if>
		     <if test="semantic!=null and semantic!=''">
		      AND   que.classify = #{semantic} 
		     </if>
	</select>
	<select id="findQuestion"   resultMap="questionResultMap">
		<![CDATA[
		  select  que.question_id,
				   que.account,
				   que.application,
				   que.content,
				   que.command,
				   que.classify,
				   date_format(que.create_time, '%Y-%m-%d') as create_time,
				   que.pattern
		     from mly_question que
		     where que.question_id = #{questionId}
			]]>
	</select>
	<insert id="saveQuestion"  >
	<![CDATA[
		   insert into  mly_question(question_id,account,application,content,command,classify,nextclassify, pattern)
		    VALUES(#{questionId},#{account},#{application},#{content},#{command},#{classify},#{nextclassify},#{pattern})
			]]>
	</insert>
	<update id="updateQuestion"  parameterType="com.mlycan.main.entity.Question"   >
		<![CDATA[
		   update mly_question que
		      set 
		          que.question_id=#{questionId},
		          que.account=#{account},
		          que.application=#{application},
		          que.content=#{content},
		          que.command=#{command},
		          que.classify=#{classify},
		          que.nextclassify=#{nextclassify},
		          que.create_time = now();
		          que.pattern=#{pattern}
		      where  que.question_id=#{questionId} 
			]]>
	</update>
	<delete id="deleteQuestion">
	<![CDATA[
	         delete 
	         from mly_question 
	         where question_id=#{questionId} 
			]]>
	</delete>
	<delete id="deleteQuestionByparam">
	<![CDATA[
	        DELETE  FROM mly_question  
             WHERE account = #{robotAccount}
	         AND   application = #{application}
	         AND   classify = #{semantic}
             AND   content like  concat('%', #{questionContent}, '%')
             AND   command like  concat('%', #{questionCommand}, '%')
			]]>
	</delete>
	
</mapper>
