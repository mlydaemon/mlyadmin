<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace必须是DAO接口的全类名  -->

<mapper namespace="com.mlycan.main.mapper.UserMapper">
	<resultMap type="com.mlycan.main.entity.User" id="userResultMap"> 
        <id property="userId" column="user_id"/> 
        <result property="account" column="account"/> 
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/> 
        <result property="phone" column="phone"/> 
        <result property="positionIds" column="positionIds"/>
        <result property="positionNames" column="positionNames"/> 
    </resultMap> 
    <select id="findAll"   resultMap="userResultMap">
		  select 
		       user.user_id as user_id,
		       user.account as account,
		       mem.nickname as nickname,
		       mem.phone    as phone,
		       GROUP_CONCAT(pos.position_id) as positionIds,
		       GROUP_CONCAT(pos.position_name) as positionNames,
		       user.password as password
		  from mly_user user
		     left join mly_member mem on (user.user_id = mem.member_id) 
		     left join mly_user_position mup on(mup.user_id = user.user_id)
		     left join mly_position pos on(pos.position_id = mup.position_id)
		     group by user.user_id
	         <if test=" count!=null">  
               limit #{start},#{count}
             </if>
	</select>
	<select id="findAllCount"   resultType="java.lang.Integer">
		 <![CDATA[ 
		   select count(user.user_id) as value
		     from mly_user user 
		 	]]> 
	</select>
	<select id="adminLogin" parameterType="java.lang.String"   resultMap="userResultMap">
		<![CDATA[
		   select user_id,account,password from mly_user where 
				account = #{account}
			and password = #{password}
			]]>
	</select>
	<select id="findUserByAccount" parameterType="java.lang.String"   resultMap="userResultMap">
		<![CDATA[
		select 
		       user.user_id as user_id,
		       user.account as account,
		       mem.nickname as nickname,
		       mem.phone    as phone,
		       GROUP_CONCAT(pos.position_id) as positionIds,
		       GROUP_CONCAT(pos.position_name) as positionNames,
		       user.password as password
		  from mly_user user
		     left join mly_member mem on (user.user_id = mem.member_id) 
		     left join mly_user_position mup on(mup.user_id = user.user_id)
		     left join mly_position pos on(pos.position_id = mup.position_id)
		     where user.account = #{account}
		     group by user.user_id
		   
			]]>
	</select>
	<delete id="deleteUserPositions">
	       <![CDATA[
	          delete  from mly_user_position where user_id=#{userId} 
			]]>
	</delete>
	<insert id="replaceUserPositions" >  
	   
	    replace into mly_user_position(user_id, position_id) VALUES 
	    <foreach collection="positionIds" index="index" item="item"  separator=",">  
	        (#{userId},#{item}) 
	    </foreach>  
	</insert> 
	<update id="updateUser"  parameterType="com.mlycan.main.entity.User"  useGeneratedKeys="true" keyProperty="userId"  >
		<![CDATA[
		   update  mly_user user
		   set 
		       user.password = #{password},
		       user.update_time=now()
		      where  user.user_id = #{userId}
			]]>
	</update>
	<insert id="saveUser"  parameterType="com.mlycan.main.entity.User"  useGeneratedKeys="true" keyProperty="userId"  >
		<![CDATA[
		insert into mly_user(account,password,created_time) values(#{account},#{password},now())
			]]>
	</insert>
	<delete id="deleteUserByid">
	<![CDATA[
	         delete 
	         from mly_user 
	         where user_id=#{userId} 
			]]>
	</delete>
</mapper>
